{"meta":{"title":"Gilgamesh","subtitle":null,"description":"Life Of Konjac","author":"James","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"Codeforce 118A String Task （字符串）No.2","slug":"2","date":"2018-08-22T10:49:01.119Z","updated":"2018-08-22T10:50:28.395Z","comments":true,"path":"2018/08/22/2/","link":"","permalink":"http://yoursite.com/2018/08/22/2/","excerpt":"","text":"String Task传送Petya started to attend programming lessons. On the first lesson his task was to write a simple program. The program was supposed to do the following: in the given string, consisting if uppercase and lowercase Latin letters, it: deletes all the vowels,inserts a character “.” before each consonant,replaces all uppercase consonants with corresponding lowercase ones.Vowels are letters “A”, “O”, “Y”, “E”, “U”, “I”, and the rest are consonants. The program’s input is exactly one string, it should return the output as a single string, resulting after the program’s processing the initial string. Help Petya cope with this easy task. InputThe first line represents input string of Petya’s program. This string only consists of uppercase and lowercase Latin letters and its length is from 1 to 100, inclusive. OutputPrint the resulting string. It is guaranteed that this string is not empty. Examplesinputtouroutput.t.rinputCodeforcesoutput.c.d.f.r.c.sinputaBAcAbaoutput.b.c.b 题目大意： 字符串处理 只留辅音字母 每个字母变小写 每个辅音字母前面加”.” 做法： 手写 tolowercase函数(大写字母和小写字母ASCII码差32) “y”是半元音！！！！！！！！！！！！没去掉还能A到note15 12345678910111213141516171819202122232425#include&lt;iostream&gt;#include&lt;cstdio&gt;#include&lt;cstring&gt;using namespace std;string s;string tolowercase(string str)&#123; for(int i=0;i&lt;str.size();i++)&#123; if(str[i]&gt;='A'&amp;&amp;str[i]&lt;='Z')&#123; str[i]+=32; &#125; &#125; return str;&#125;int main()&#123; cin&gt;&gt;s; s=tolowercase(s); for(int i=0;i&lt;s.size();i++)&#123; if(s[i]=='a'||s[i]=='e'||s[i]=='i'||s[i]=='o'||s[i]=='u'||s[i]=='y') continue; else if(s[i]&lt;='z'&amp;&amp;s[i]&gt;='a')&#123; cout&lt;&lt;\".\"&lt;&lt;s[i]; &#125; &#125; cout&lt;&lt;endl; return 0;&#125;","categories":[],"tags":[]},{"title":"Codefoce 158A Next Round （模拟水题) No.1","slug":"1","date":"2018-08-22T09:53:09.340Z","updated":"2018-08-22T10:31:23.151Z","comments":true,"path":"2018/08/22/1/","link":"","permalink":"http://yoursite.com/2018/08/22/1/","excerpt":"","text":"Next Round传送“Contestant who earns a score equal to or greater than the k-th place finisher’s score will advance to the next round, as long as the contestant earns a positive score…” — an excerpt from contest rules. A total of n participants took part in the contest (n ≥ k), and you already know their scores. Calculate how many participants will advance to the next round. InputThe first line of the input contains two integers n and k (1 ≤ k ≤ n ≤ 50) separated by a single space. The second line contains n space-separated integers a1, a2, …, an (0 ≤ ai ≤ 100), where ai is the score earned by the participant who got the i-th place. The given sequence is non-increasing (that is, for all i from 1 to n - 1 the following condition is fulfilled: ai ≥ ai + 1). OutputOutput the number of participants who advance to the next round. Examplesinput 128 510 9 8 7 7 7 5 5 output 16 input 124 20 0 0 0 output 10 NoteIn the first example the participant on the 5th place earned 7 points. As the participant on the 6th place also earned 7 points, there are 6 advancers. In the second example nobody got a positive score. 题目大意：有n个人的得分 取前k名晋级 要求得分必须大于零才能晋级 求晋级人数 做法：模拟水题 注意有相同得分 和 全是负分的情况 代码：123456789101112131415161718192021222324252627282930313233#include&lt;iostream&gt;#include&lt;cstdio&gt;#include&lt;algorithm&gt;#include&lt;cstring&gt;#include&lt;cmath&gt;using namespace std;const int SIZE=10010;int a[SIZE];int n,k,ans,p; int read()&#123; int res=0,w=1;char ch; while(!isdigit(ch)&amp;&amp;ch!='-') ch=getchar(); if(ch=='-') w=-1,ch=getchar(); while(isdigit(ch)) res=res*10+ch-'0',ch=getchar(); return res*w;&#125;bool cmp(int a,int b)&#123; return a&gt;b;&#125;int main()&#123; n=read();k=read(); for(int i=1;i&lt;=n;i++)&#123; a[i]=read(); &#125; sort(a+1,a+n+1,cmp); p=a[k]; for(int i=1;i&lt;=n;i++)&#123; if(a[i]&gt;0&amp;&amp;a[i]&gt;=p) ans++; else break; &#125; cout&lt;&lt;ans&lt;&lt;endl; return 0;&#125;","categories":[],"tags":[]},{"title":"！！！","slug":"Hello-hexo","date":"2018-08-22T06:12:36.408Z","updated":"2018-08-22T08:48:32.819Z","comments":true,"path":"2018/08/22/Hello-hexo/","link":"","permalink":"http://yoursite.com/2018/08/22/Hello-hexo/","excerpt":"","text":"创建了一天的博客，希望成功！！！","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2018-08-22T03:16:56.679Z","updated":"2018-08-22T03:16:56.679Z","comments":true,"path":"2018/08/22/hello-world/","link":"","permalink":"http://yoursite.com/2018/08/22/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}